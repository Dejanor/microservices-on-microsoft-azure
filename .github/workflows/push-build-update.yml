name: Publish and Patch Build

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Setup AKS with Terraform"]
    types:
      - completed

jobs:
  build_and_patch:
    name: Build and Patch Docker Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ["ui", "catalog", "cart", "checkout", "orders", "assets"]
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: context-info
          path: ./artifact

      - name: Re-upload artifact
        run: |
          cp ./artifact/context-info.txt ./
      - uses: actions/upload-artifact@v3
        with:
          name: context-info
          path: context-info.txt
          
      - name: Install Pack and Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget tar
          mkdir -p $GITHUB_WORKSPACE/bin
          wget -qO- https://github.com/buildpacks/pack/releases/download/v0.27.0/pack-v0.27.0-linux.tgz | tar -xz -C $GITHUB_WORKSPACE/bin
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

      - name: Extract and sanitize version from ref
        id: get_version
        run: |
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=${GITHUB_REF#refs/heads/}
          fi
          VERSION=${VERSION//\//-}  # Replace slashes with hyphens
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Sanitize repository name
        id: sanitize_repo
        run: |
          REPOSITORY=${{ secrets.REGISTRY_USER }}/watchn
          REPOSITORY=${REPOSITORY#/}  # Remove leading slash if present
          echo "REPOSITORY=$REPOSITORY" >> $GITHUB_ENV

      - name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASS }}

      - name: Build and Push Docker Images
        run: ./scripts/build-image.sh -r ${{ secrets.REGISTRY_USER }} -t ${{ env.VERSION }} -s ${{ matrix.service }} --cnb --push

      - name: Patch image versions in repository
        env:
          TAG: ${{ env.VERSION }} 
        run: ./scripts/patch-image-versions.sh

      # - name: Create or update Pull Request
      #   uses: peter-evans/create-pull-request@v4
      #   with:
      #     token: ${{ secrets.ACTIONS_PAT }}
      #     commit-message: "Update image tags for build ${{ env.VERSION }}"
      #     title: "[Automation] Update Image Tags for Build ${{ env.VERSION }}"
      #     base: main  # Change to 'main' if your default branch is named 'main'
      #     branch: update-image-tags-${{ env.VERSION }}
      #     labels: automated pr

  create_pull_request:
    name: Create or Update Pull Request
    runs-on: ubuntu-latest
    needs: build_and_patch
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Create or update Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.ACTIONS_PAT }}  # Use PAT for authentication
          commit-message: "Update image tags for build ${{ env.VERSION }}"
          title: "[Automation] Update Image Tags for Build ${{ env.VERSION }}"
          base: main
          branch: update-image-tags-${{ env.VERSION }}
          labels: automated pr
