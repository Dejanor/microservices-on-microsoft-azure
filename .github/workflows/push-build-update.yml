name: Publish and Patch Build

on:
  push:
    branches: ["main"]
    tags:
      - 'build*'

jobs:
  build_and_patch:
    name: Build and Patch Docker Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ["ui", "catalog", "cart", "checkout", "orders", "assets"]
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install Pack and Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget tar
          mkdir -p $GITHUB_WORKSPACE/bin
          wget -qO- https://github.com/buildpacks/pack/releases/download/v0.27.0/pack-v0.27.0-linux.tgz | tar -xz -C $GITHUB_WORKSPACE/bin
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

      - name: Extract version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF/refs\/tags\//}
          VERSION=${VERSION//\//-}  # Replace slashes with hyphens
          echo "VERSION=$VERSION" >> $GITHUB_ENV


      - name: Sanitize repository name
        id: sanitize_repo
        run: |
          REPOSITORY=${{ secrets.REGISTRY_USER }}/watchn
          REPOSITORY=${REPOSITORY#/}  # Remove leading slash if present
          echo "REPOSITORY=$REPOSITORY" >> $GITHUB_ENV

      - name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASS }}

      - name: Build and Push Docker Images
        run: ./scripts/build-image.sh -r ${{ secrets.REGISTER_USER }}/watchn -t ${{ env.VERSION }} -s ${{ matrix.service }} --cnb --push

      - name: Patch image versions in repository
        run: ./scripts/patch-image-versions.sh

      - name: Create or update Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update image tags for build ${{ env.VERSION }}"
          title: "[Automation] Update Image Tags for Build ${{ env.VERSION }}"
          base: master  # Change to 'main' if your default branch is named 'main'
          branch: update-image-tags-${{ env.VERSION }}
          labels: automated pr
