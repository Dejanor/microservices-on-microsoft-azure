name: Publish and Patch Build

on:
  push:
    tags:
      - 'build*'

jobs:
  build_and_patch:
    name: Build and Patch Docker Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ["ui", "catalog", "cart", "checkout", "orders", "assets"]
    steps:
      - name: Check out code
        uses: actions/checkout@v3  # Updated to the latest version

      - name: Install Pack
        run: |
          wget -qO- https://github.com/buildpacks/pack/releases/download/v0.27.0/pack-v0.27.0-linux.tgz | tar -xz -C $GITHUB_WORKSPACE/bin
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Login to Docker registry
        uses: docker/login-action@v2  # Updated to the latest version
        with:
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASS }}

      - name: Set up QEMU and Docker Buildx
        uses: docker/setup-buildx-action@v2  # Updated to the latest version

      - name: Build and push Docker images
        run: ./scripts/build-image.sh -r watchn -t ${{ env.VERSION }} -a -p -s ${{ matrix.service }}

      - name: Patch image versions in repository
        if: ${{ github.ref == 'refs/heads/main' }}  # Ensure this runs only on main branch
        run: ./scripts/patch-image-versions.sh

      - name: Create or update Pull Request
        uses: peter-evans/create-pull-request@v4  # Updated to the latest version
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update image tags for build ${{ env.VERSION }}"
          title: "[Automation] Update Image Tags for Build ${{ env.VERSION }}"
          base: main  # Consider changing this to 'main' if your default branch is named 'main'
          branch: update-image-tags-${{ env.VERSION }}
          labels: automated pr
