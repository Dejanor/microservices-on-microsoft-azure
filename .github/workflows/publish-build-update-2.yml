name: Publish Build

on:
  push:
    branches: [ "main" ]
    tags:
      - 'build*'

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ["ui", "catalog", "cart", "checkout", "orders", "assets"]
    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Pack
      run: |
        mkdir -p $GITHUB_WORKSPACE/bin
        echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
        wget https://github.com/buildpacks/pack/releases/download/v0.28.0/pack-v0.28.0-linux.tgz
        tar -xvzf pack-v0.28.0-linux.tgz
        mv pack $GITHUB_WORKSPACE/bin/

    - name: Get version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_PASS }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push images
      env:
        TAG: ${{ steps.get_version.outputs.VERSION }}
        SERVICE: ${{ matrix.service }}
      run: |
        scripts/build-image.sh -r watchn -t $TAG -a -p -s $SERVICE

  patch-tags:
    name: Patch tags
    needs: build
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    - name: Patch image tags
      env:
        TAG: ${{ steps.get_version.outputs.VERSION }}
      run: scripts/patch-image-versions.sh

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "Patch image tags for build ${{ steps.get_version.outputs.VERSION }}"
        title: "[Automation] Patch Image Tags"
        branch: patch-tags
        base: main
        labels: automated pr
