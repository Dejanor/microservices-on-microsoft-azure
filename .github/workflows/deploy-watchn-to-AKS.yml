name: Deploy to AKS

on:
  workflow_dispatch:
  push: 
    branches: [ "main" ]
  workflow_run:
    workflows: ["Publish and Patch Build"]
    types:
      - completed

jobs:
  deploy_to_aks:
    name: Deploy watchn to AKS
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
        - name: Check out code
          uses: actions/checkout@v3
          
        - uses: hashicorp/setup-terraform@v3 
        - name: Run Terraform
          id: terraform
          run: |
            cd terraform
            
            export MSYS_NO_PATHCONV=1
  
            export ARM_SUBSCRIPTION_ID="${{ secrets.AZURE_SUBSCRIPTION_ID }}"
            export ARM_TENANT_ID="${{ secrets.AZURE_TENANT_ID }}"
            export ARM_CLIENT_ID="${{ secrets.TF_VAR_ARM_CLIENT_ID }}"
            export ARM_CLIENT_SECRET="${{ secrets.TF_VAR_ARM_CLIENT_SECRET }}"
            export ARM_ACCESS_KEY="${{ secrets.TF_VAR_ARM_ACCESS_KEY }}"
            
            export TF_VAR_ARM_SUBSCRIPTION_ID="${{ secrets.AZURE_SUBSCRIPTION_ID }}"
            export TF_VAR_ARM_TENANT_ID="${{ secrets.AZURE_TENANT_ID }}"
            export TF_VAR_ARM_CLIENT_ID="${{ secrets.TF_VAR_ARM_CLIENT_ID }}"
            export TF_VAR_ARM_CLIENT_SECRET="${{ secrets.TF_VAR_ARM_CLIENT_SECRET }}"
            export TF_VAR_ARM_ACCESS_KEY="${{ secrets.TF_VAR_ARM_ACCESS_KEY }}"
            
            terraform init
            echo "resource_group=$(terraform output -raw resource_group_name)" >> $GITHUB_ENV
            echo "cluster_name=$(terraform output -raw kubernetes_cluster_name)" >> $GITHUB_ENV
            
        - name: Azure login
          uses: azure/login@v1.4.6
          with:
                client-id: ${{ secrets.TF_VAR_ARM_CLIENT_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                            
        - name: Use AKS context
          uses: azure/aks-set-context@v3
          with:
            resource-group: ${{ env.resource_group }}
            cluster-name: ${{ env.cluster_name }}

        - uses: azure/setup-kubectl@v3
          with:
             version: 'v1.21.0'
          id: install


