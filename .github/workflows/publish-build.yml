# name: Publish Build

# on:
#   push:
#     tags:
#     - 'build*'

# jobs:

#   build:
#     name: Build
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         service: ["ui", "catalog", "cart", "checkout", "orders", "assets"]
#     steps:

#     - name: Check out code into the Go module directory
#       uses: actions/checkout@v2

#     - name: Install Pack
#       run: |
#         mkdir -p $GITHUB_WORKSPACE/bin
#         echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
#         wget https://github.com/buildpack/pack/releases/download/v0.27.0/pack-v0.27.0-linux.tgz \
#           && tar -xvf pack-v0.27.0-linux.tgz \
#           && mv pack $GITHUB_WORKSPACE/bin/pack
   
#     - name: Get the version
#       id: get_version
#       run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

#     - name: Login to container registry
#       uses: docker/login-action@v1
#       with:
#         username: ${{ secrets.DOCKERHUB_USERNAME }}
#         password: ${{ secrets.DOCKERHUB_TOKEN }}

#     - name: Set up QEMU
#       id: qemu
#       uses: docker/setup-qemu-action@v1
#       with:
#         image: tonistiigi/binfmt:latest
#         platforms: all

#     - name: Set up Docker Buildx
#       id: buildx
#       uses: docker/setup-buildx-action@v1

#     - name: Build Images
#       env:
#         TAG: "${{ steps.get_version.outputs.VERSION }}"
#         SERVICE: "${{ matrix.service }}"
#       run: |
#         scripts/build-image.sh -r watchn -t $TAG -a -p -s $SERVICE

#   patch_tags:
#     name: Patch tags
#     needs: build
#     runs-on: ubuntu-latest
#     steps:

#     - name: Check out code into the Go module directory
#       uses: actions/checkout@v2

#     - name: Get the version
#       id: get_version
#       run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

#     - name: Patch Tags
#       env:
#         TAG: "${{ steps.get_version.outputs.VERSION }}"
#       run: |
#         scripts/patch-image-versions.sh

#     - name: Create Pull Request
#       uses: peter-evans/create-pull-request@v3
#       with:
#         token: ${{ secrets.GITHUB_TOKEN }}
#         commit-message: "Patch image tags for build ${{ steps.get_version.outputs.VERSION }}"
#         title: "[Automation] Patch Image Tags"
#         base: master
#         branch: "patch-tags"
#         labels: |
#           automated pr
    
