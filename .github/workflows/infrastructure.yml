name: Deploy watchn to AKS and use Helm

on:
 push:
   branches: ["main"]
 workflow_dispatch:

# env:
#  CONTAINER_REGISTRY: "your-azure-container-registry"
#  CONTAINER_NAME: "your-container-name"
#  RESOURCE_GROUP: "your-resource-group"
#  CLUSTER_NAME: "your-cluster-name"
#  CHART_PATH: "your-chart-path"
#  CHART_OVERRIDE_PATH: "your-chart-override-path"


#  buildImage:
#    permissions:
#      contents: read
#      id-token: write
#    runs-on: ubuntu-latest
#    steps:
#       Checks out the repository this file is in
#      - uses: actions/checkout@v4

#       Logs in with your Azure credentials#
#      - name: Azure login
#        uses: azure/login@v1.4.6
#        with:
#          client-id: ${{ secrets.AZURE_CLIENT_ID }}
#          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
#          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

#       Builds and pushes an image up to your Azure Container Registry
#      - name: Build and push image to ACR
#        run: |
#          az acr build --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.RESOURCE_GROUP }} .
jobs:
      deploy:
          runs-on: ubuntu-latest
          steps:
            - uses: actions/checkout@v4
            - name: Azure login
              uses: azure/login@v1.4.6
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
                access-key: ${{ secrets.AZURE_ACCESS_KEY }}
                
            - name: run terraform
              run: |
                export TF_VAR_ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}
                export TF_VAR_ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}
                export TF_VAR_ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}
                export TF_VAR_ARM_CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET }}
                export TF_VAR_ARM_ACCESS_KEY="${{ secrets.AZURE_ACCESS_KEY }}
                terraform init
                terraform apply --auto-approve
      
