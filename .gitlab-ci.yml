stages:
    - "infrastructure"
    - "build"
    - "deploy-to-dev"
    - "deploy-to-prod"

test_artifact:
    stage: infrastructure
    script:
<<<<<<< HEAD
<<<<<<< HEAD
        - echo "apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: 
  name: do-fra1-capstone-connect-k8
contexts:
- context:
    cluster: do-fra1-capstone-connect-k8
    user: do-fra1-capstone-connect-k8-admin
  name: do-fra1-capstone-connect-k8
current-context: do-fra1-capstone-connect-k8
kind: Config
preferences: {}
users:
- name: do-fra1-capstone-connect-k8-admin
  user:
    token:  >> /builds/Janortop5/capstone-microservices-demo-watchn/config
        - echo "it works" >> /builds/Janortop5/capstone-microservices-demo-watchn/config
=======
        - cp $CONFIG >> /builds/Janortop5/capstone-microservices-demo-watchn/config
>>>>>>> 5c2be5d (Update .gitlab-ci.yml file)
=======
        - cp $CONFIG /builds/Janortop5/capstone-microservices-demo-watchn/config
>>>>>>> f9825a6 (Update .gitlab-ci.yml file)
    artifacts:
      paths:
      - /builds/Janortop5/capstone-microservices-demo-watchn/config
      expire_in: 1 week

did_it_workk:
    stage: build
    image: ubuntu:22.10
    script:
        - cat /builds/Janortop5/capstone-microservices-demo-watchn/config

deploy_to_dev:
    stage: deploy-to-dev
    image:
        name: dtzar/helm-kubectl:latest
        entrypoint: ['']
    script:
        - kubectl
        - helm
        - helmfile

    # script:
    #     - export KUBECONFIG=/builds/Janortop5/capstone-microservices-demo-watchn/config
    #     - kubectl get nodes
